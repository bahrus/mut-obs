export function upSearch(e,t){let s=e.previousElementSibling||e.parentElement;for(;s&&!s.matches(t);)s=e.previousElementSibling||e.parentElement;return s}export class MutObs extends HTMLElement{connectedCallback(){this.style.display="none";const e=this.getAttribute.bind(this),t=this.hasAttribute.bind(this),s=upSearch(this,e("observe")),a={attributeFilter:null!==e("attr-filter")?JSON.parse(e("attr-filter")):void 0,attributes:t("attributes"),childList:t("child-list"),subtree:t("subtree"),attributeOldValue:t("attribute-old-value"),characterData:t("character-data"),characterDataOldValue:t("character-data-old-value")};this._observer=new MutationObserver((a=>{s?.matches(e("on"))&&this.dispatchEvent(new CustomEvent(e("dispatch"),{bubbles:t("bubbles"),composed:t("composed"),cancelable:t("cancelable"),detail:{mutRec:a}}))})),this._observer.observe(s,a),this.dispatchEvent(new CustomEvent("watching-for-"+e("dispatch"),{bubbles:t("bubbles"),composed:t("composed"),cancelable:t("cancelable")}))}disconnectedCallback(){this._observer?.disconnect()}}const is="mut-obs";customElements.get(is)||customElements.define(is,MutObs);
